generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type PageHero {
  content String
  title   String
}

type PageMetadata {
  keywords  String
  pageItems PageMetadataPageItems[]
}

type PageMetadataPageItems {
  icon  String[]
  order Int
  slug  String
  title String
}

type ProjectExtra {
  tags String[]
}

type ProjectUrl {
  demo   String
  github String
}

type TimelineExtra {
  gpa          String
  major        String
  minor        String
  thesis       String
  thesis_grade String?
}

model Page {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime     @db.Date
  desc      String
  excerpt   String
  hero      PageHero?
  label     String       @unique
  metadata  PageMetadata
  title     String
  updatedAt DateTime     @db.Date
  projects  Project[]
  sections  Section[]
}

model Project {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime     @default(now()) @db.Date
  desc      String
  excerpt   String
  extra     ProjectExtra
  page      Page         @relation(fields: [pageId], references: [id])
  pageId    String       @db.ObjectId
  title     String
  url       ProjectUrl
}

model Section {
  id       String     @id @default(auto()) @map("_id") @db.ObjectId
  content  String
  order    Int        @default(1)
  page     Page       @relation(fields: [pageId], references: [id])
  pageId   String     @db.ObjectId
  subtitle String
  tag      String
  skills   Skill[]
  timeline Timeline[]
}

model Skill {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  level     String
  section   Section  @relation(fields: [sectionId], references: [id])
  sectionId String   @db.ObjectId
  svg       String
  title     String
  top       Boolean?
}

model Timeline {
  id        String         @id @default(auto()) @map("_id") @db.ObjectId
  end       DateTime?      @db.Date
  extra     TimelineExtra?
  location  String
  main      String
  section   Section        @relation(fields: [sectionId], references: [id])
  sectionId String         @db.ObjectId
  start     DateTime       @db.Date
  sub       String
}
